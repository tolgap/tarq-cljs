(ns tarq-cljs.vulnerability-test
  (:require [tarq-cljs.components.vulnerability :as vuln]
            [tarq-cljs.common-test :refer [append-container!]]
            [dommy.core :as dommy :refer-macros [sel1 sel]]
            [om.core :as om :include-macros true]
            [cljs.test :refer-macros [deftest is testing]]))

(deftest vulnerability-table-row
  (let [c (append-container!)
        data {:title "vuln1"
              :plugin {:name "plugin1"}
              :patched_in ["2.2.3" "3.0.1"]}]
    (testing "shows vuln name, plugin name and patched versions"
      (om/root vuln/vulnerability-table-row data {:target c})
      (is (= "plugin10vuln12.2.3, 3.0.1"
             (dommy/text c))))))

(deftest vulnerability-table
  (let [c (append-container!)
        data [{:title "vuln1"
               :plugin {:name "plugin1"}
               :patched_in ["2.2.3" "3.0.1"]}
              {:title "vuln2"
               :plugin {:name "plugin9"}
               :websites [1 2 3] ;; simulate 3 websites
               :patched_in ["0.0.1"]}]]
    (testing "shows both vulnerabilities"
      (om/root vuln/vulnerabilities-table data {:target c})
      (is (= 2
             (count (sel c :tr.vulnerability))))
      (is (= ["plugin10vuln12.2.3, 3.0.1" "plugin93vuln20.0.1"]
             (mapv dommy/text (sel c :tr.vulnerability)))))))
